ARCHPRSC TITLE 'GENERAL SCAN ROUTINE FOR EXEC PARMS'
*---------------------------------------------------------------------*
*                                                                     *
*         PROGRAM             ARCHPRSC                                *
*         AUTHOR              ROB PRINS                               *
*                                                                     *
*         ATTRIBUTES:         RENT,REUS                               *
*                                                                     *
*         FUNCTION            SCAN THE EXEC PARAMETER                 *
*                             EXAMPLE: PARM='KEYWORD=CONTENTS'        *
*                             CALL PARMSCAN,(WORD1,WORD2)             *
*                             WORD1 CONTAINS 'KEYWORD' (8 BYTES WITH  *
*                             TRAILING BLANKS IF 'KEYWORD' IS SHORTER *
*                             THAN 8 BYTES)                           *
*                             AFTER THE CALL YOU RECEIVE IN WORD2     *
*                             WICH HAVE A LENGTH OF 255 BYTES, THE    *
*                             FOLLOWING INFORMATION                   *
*                             2 BYTES LENGTH OF 'CONTENTS'            *
*                             BYTES 3 TILL 255 'CONTENTS'             *
*                             EX. PARM='ROB=CHARLIE'                  *
*                             IN WORD1 YOU MUST SPECIFY 'ROB     '    *
*                             YOU RECEIVE IN WORD2                    *
*                             X'0007' IN THE FIRST 2 BYTES            *
*                             AND 'CHARLIE' WITH 246 BLANKS IN WORD2  *
*                             RETURNCODES: 00 IF PARM FOUND           *
*                                          04 IF PARM NOT FOUND       *
*                                                                     *
*------------------------------------------ (C)-2020 SKYBIRD SYSTEMS -*
         SPACE 3
ARCHPRSC CSECT
         SAVE  (14,12),,*              SAVE REGISTERS
         LR    R10,R15                 BASE REGISTER
         USING ARCHPRSC,R10            GET ADDRESSABILITY
         LR    R2,R1                   SAVE OUR PARM
         GETMAIN RU,LV=72              OBTAIN SAVEAREA
         LR    R4,R1                   SAVE IT'S ADDRESS
         ST    R4,8(,R13)              FORWARD POINTER
         ST    R13,4(,R4)              BACKWARD POINTER
         L     R3,4(,R13)              SAVE AREA BEFORE SAVE MACRO
*                                      (ARCHINIT)
         L     R3,4(,R3)               POINT TO SA OF ARCHIVER
         LR    R13,R4
         L     R1,24(,R3)              PICKUP A(PARM) OF CALLING PROG.
         LM    R3,R4,0(R2)             PICKUP OUR PARM
         USING WKAREA,R4
         L     R2,0(,R1)               PICKUP EXEC-PARM OF CALLER
         LH    R5,0(,R2)               LENGTH OF EXEC PARM
         LTR   R5,R5                   NO PARM IN EXEC-STMNT ?
         BZ    ERROR                   ERROR IF YES
         LA    R2,2(,R2)               SKIP LENGTH
         XR    R6,R6                   FOR ACTUAL LENGTH OF 'KEYWORD'
         LR    R7,R3                   SAVE ADDRESS 'KEYWORD'
A001     EQU   *
         CLI   0(R7),X'40'             TRAILING BLANK ?
         BE    A003                    END OF KEYWORD IF YES
         LA    R6,1(,R6)               COUNT IS COUNT+1
         LA    R7,1(,R7)
         C     R6,=F'8'                MAX LENGTH REACHED ?
         BL    A001                    BRANCH IF NOT
*
A003     EQU   *
         BCTR  R6,0                    MINUS 1 FOR EX INSTR
*
A005     EQU   *
         EX    R6,COMPARE        COMPARE IF 'KEYWORD' IN EXEC-PARM
         BE    PRMFOUND                BRANCH IF FOUND
A005A    LA    R2,1(,R2)               NEXT CHAR IN EXEC-PARM
         BCT   R5,A005                 TRY AGAIN
         B     ERROR                   'KEYWORD' NOT FOUND
*
COMPARE  CLC   0(0,R2),0(R3)           << EXECUTED >>
*
PRMFOUND EQU   *
         LA    R2,0(R2,R6)
         LA    R2,1(,R2)               EQUAL SIGN
         CLI   0(R2),C'='              MUST BE A = SIGN
         BE    A006                    YES PROCEED
         BCTR  R2,R6                   RESET R2
         SLR   R2,R6                           )RESET R2
         B     A005A
A006     SLR   R5,R6                   DECR WITH KEYWORD LENGTH -1
         BCTR  R5,0                    DECR WITH KEYWORD LENGTH
         XR    R7,R7                   FOR COUNT 'CONTENTS'
         LA    R2,1(,R2)               SKIP EQUAL SIGN
         BCTR  R5,0                    DECREASE LENGTH ('=' SIGN)
         C     R5,=F'0'
         BL    ERROR
         LR    R3,R2                   SAVE BEGINADDRESS 'CONTENTS'
*
A007     EQU   *
         LTR   R5,R5                   REGISTER 5 ALREADY ZERO
         BZ    A009                    YES: PARM LENGTH IS 0
         CLI   0(R2),C','              END OF 'CONTENTS'
         BE    A009                    BRANCH IF SO
         LA    R2,1(,R2)               NEXT CHAR 'CONTENTS'
         LA    R7,1(,R7)               COUNT THAT CHARACTER
         C     R7,=F'253'              MAX LENGTH ?
         BNL   A009                    FORCE END IF >=253
         BCT   R5,A007                 NEXT CHAR
*
A009     EQU   *
         STH   R7,PARMLEN              LENGTH OF 'CONTENTS'
         MVI   PARM,X'40'              CLEAR 'CONTENTS' FIELD
         MVC   PARM+1(252),PARM
         BCTR  R7,0                    FOR EX.
         C     R7,=F'-1'               NEGATIVE ?
         BE    END                     YES: SKIP MOVE
         EX    R7,MOVE                 MOVE 'CONTENTS'
         B     END
*
MOVE     MVC   PARM(0),0(R3)           *** EXECUTE ONLY ***
*
END      EQU   *
         SR    R3,R3                   ZERO RC
         B     BACK
*
ERROR    EQU   *
         LA    R3,4                    'KEYWORD' NOT FOUND
*
BACK     EQU   *
         LR    R2,R13                  PICKUP SAVE AREA TO BE FREED
         L     R13,4(,R13)             CALLERS SAVE AREA
         FREEMAIN RU,LV=72,A=(2)       FREE OUR SAVE AREA
         LR    R15,R3                  RETURN CODE
         RETURN (14,12),RC=(15)        RETURN
         EJECT
         LTORG ,
WKAREA   DSECT
PARMLEN  DS    CL2
PARM     DS    CL253
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
